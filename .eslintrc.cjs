module.exports = {
  root: true,
  overrides: [
    {
      files: ['*.yml', '*.yaml'],
      parser: 'yaml-eslint-parser',
      extends: ['plugin:yml/recommended', 'plugin:yml/prettier', 'plugin:prettier/recommended'],
    },
    {
      files: ['*.html', '*.js', '*.json', '*.jsx', '*.md'],
      extends: ['auto', 'plugin:prettier/recommended'],
    },
    {
      plugins: ['actions'],
      files: ['.github/workflows/*.{yml,yaml}'],
      processor: 'actions/actions',
    },
    {
      files: ['*.ts'],
      env: {
        es2022: true,
        node: true,
        'jest/globals': true,
      },
      extends: [
        'auto',
        'plugin:import/typescript',
        'plugin:github/recommended',
        'plugin:prettier/recommended',
        'eslint-config-prettier',
      ],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        ecmaVersion: 13,
        sourceType: 'module',
        project: ['./tsconfig.json', '__tests__/tsconfig.json'],
      },
      // settings: {
      //     'import/resolver': {
      //         node: {
      //             extensions: ['.js', '.ts'],
      //             paths: ['node_modules', 'src'],
      //             moduleDirectory: ['node_modules', 'src'],
      //         },
      //     },
      // },
      globals: {
        NodeJS: true,
      },
      plugins: ['@typescript-eslint', 'simple-import-sort', 'import', 'jest'],
      rules: {
        'unicorn/consistent-destructuring': 'error',
        'no-restricted-syntax': 'off',
        '@typescript-eslint/restrict-template-expressions': 'off',
        'import/prefer-default-export': 'off',
        'no-underscore-dangle': 'off',
        'babel/camelcase': 'off',
        'unicorn/prefer-module': 'off',
        'consistent-return': 'off',
        'sonarjs/cognitive-complexity': 'off',
        'security/detect-non-literal-regexp': 'off',
        'security/detect-unsafe-regex': 'off',
        'no-await-in-loop': 'off',
        'class-methods-use-this': 'off',
        'security/detect-non-literal-require': 'off',
        'security/detect-non-literal-fs-filename': 'off',
        'lodash/import-scope': 'off',
        'i18n-text/no-en': 'off',
        'eslint-comments/no-use': 'off',
        'import/no-namespace': 'off',
        'no-unused-vars': 'off',
        'import/no-unresolved': [
          'error',
          {
            ignore: ['@octokit/openapi-types'],
          },
        ],
        'simple-import-sort/imports': 'error',
        'simple-import-sort/exports': 'error',
        'import/newline-after-import': 'error',
        'import/no-duplicates': 'error',
        'import/extensions': [
          'error',
          'ignorePackages',
          {
            ts: 'never',
          },
        ],
        'sort-imports': 'off',

        'linebreak-style': ['error', 'unix'],
        '@typescript-eslint/no-unused-vars': 'error',
        '@typescript-eslint/explicit-member-accessibility': [
          'error',
          { accessibility: 'no-public' },
        ],
        '@typescript-eslint/no-require-imports': 'error',
        '@typescript-eslint/array-type': 'error',
        '@typescript-eslint/await-thenable': 'error',
        '@typescript-eslint/ban-ts-comment': 'error',
        camelcase: 'off',
        '@typescript-eslint/consistent-type-assertions': 'error',
        '@typescript-eslint/explicit-function-return-type': ['error', { allowExpressions: true }],
        '@typescript-eslint/func-call-spacing': ['error', 'never'],
        '@typescript-eslint/no-array-constructor': 'error',
        '@typescript-eslint/no-empty-interface': 'error',
        '@typescript-eslint/no-extraneous-class': 'error',
        '@typescript-eslint/no-for-in-array': 'error',
        '@typescript-eslint/no-inferrable-types': 'error',
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-namespace': 'error',
        '@typescript-eslint/no-non-null-assertion': 'warn',
        '@typescript-eslint/no-unnecessary-qualifier': 'error',
        '@typescript-eslint/no-unnecessary-type-assertion': 'error',
        '@typescript-eslint/no-useless-constructor': 'error',
        '@typescript-eslint/no-var-requires': 'error',
        '@typescript-eslint/prefer-for-of': 'warn',
        '@typescript-eslint/prefer-function-type': 'warn',
        '@typescript-eslint/prefer-includes': 'error',
        '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        '@typescript-eslint/promise-function-async': 'error',
        '@typescript-eslint/require-array-sort-compare': 'error',
        '@typescript-eslint/restrict-plus-operands': 'error',
        '@typescript-eslint/camelcase': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        'no-console': 'off',
        'filenames/match-regex': 'off',
        quotes: ['off', 'single'],
        semi: 'off',
        '@typescript-eslint/semi': ['error', 'always'],
        '@typescript-eslint/type-annotation-spacing': 'error',
        '@typescript-eslint/unbound-method': 'error',
        'prettier/prettier': 'error',
      },
    },
  ],
};

import { Context } from '@actions/github/lib/context';
import { GitHub } from '@actions/github/lib/utils';
import { Repo, VersionObject, VersionPrefixes } from './interfaces';
export declare const version_regex: RegExp;
export declare function basename(path: string): string | null;
export declare function stripRefs(path: string): string | null;
export declare function normalize_version(v_string: string | undefined, default_version?: string): string;
export declare function repoSplit(inputRepo: string | undefined | null, context: Context): Repo | null;
export declare function versionObjToArray(vObj: VersionObject): (string | number)[];
export declare function versionObjToString(vObj: VersionObject): string;
export declare function bumper(versionObj: VersionObject, bumping: string, is_release_branch: boolean): string;
export declare function parseVersionString(str: string): VersionObject;
export declare function getVersionStringPrefix(versionObj: VersionObject, bumping: string, suffix: string | undefined, is_release_branch: boolean): string;
export declare function getVersionPrefixes(str: string): VersionPrefixes;
export declare function getLatestTag(owner: string, repo: string, tagPrefix: string, fromReleases: boolean, sortTags: boolean, ignore_v_when_searching: boolean, octokit: InstanceType<typeof GitHub>): Promise<VersionObject>;
export declare function cmpTags(a: VersionObject, b: VersionObject): number;
